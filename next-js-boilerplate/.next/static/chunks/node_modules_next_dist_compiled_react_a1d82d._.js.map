{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/compiled/react/cjs/react.development.js"],"sourcesContent":["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    var ReactVersion = '19.0.0-rc-f994737d14-20240522';\n\n    // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    // as a normal prop instead of stripping it from the props object.\n    // Passes `ref` as a normal prop instead of stripping it from the props object\n    // during element creation.\n\n    var enableRefAsProp = true;\n    // This allows us to land breaking changes to remove legacy mode APIs in experimental builds\n    // before removing them in stable in the next Major\n\n    var disableLegacyMode = true;\n    var enableRenderableContext = true; // Enables the `initialValue` option for `useDeferredValue`\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false;\n    var REACT_ELEMENT_TYPE = Symbol.for('react.transitional.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\n    var REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n    var ReactSharedInternals = {\n      H: null,\n      A: null,\n      T: null\n    };\n    {\n      ReactSharedInternals.actQueue = null;\n      ReactSharedInternals.isBatchingLegacy = false;\n      ReactSharedInternals.didScheduleLegacyUpdate = false;\n      ReactSharedInternals.didUsePromise = false;\n      ReactSharedInternals.thrownErrors = [];\n      var currentExtraStackFrame = null;\n      ReactSharedInternals.setExtraStackFrame = function (stack) {\n        currentExtraStackFrame = stack;\n      }; // Stack implementation injected by the current renderer.\n\n      ReactSharedInternals.getCurrentStack = null;\n      ReactSharedInternals.getStackAddendum = function () {\n        var stack = ''; // Add an extra top frame while an element is being validated\n\n        if (currentExtraStackFrame) {\n          stack += currentExtraStackFrame;\n        } // Delegate to the injected renderer-specific implementation\n\n        var impl = ReactSharedInternals.getCurrentStack;\n        if (impl) {\n          stack += impl() || '';\n        }\n        return stack;\n      };\n    }\n\n    // by calls to these methods by a Babel plugin.\n    //\n    // In PROD (or in packages without access to React internals),\n    // they are left as they are instead.\n\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning('warn', format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning('error', format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var stack = ReactSharedInternals.getStackAddendum();\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    var didWarnStateUpdateForUnmountedComponent = {};\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + \".\" + callerName;\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n        error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n    /**\n     * This is the abstract API for an update queue.\n     */\n\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    var assign = Object.assign;\n    var emptyObject = {};\n    {\n      Object.freeze(emptyObject);\n    }\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n      // renderer.\n\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    Component.prototype.isReactComponent = {};\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.setState = function (partialState, callback) {\n      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n        throw new Error('takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n      }\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n    function ComponentDummy() {}\n    ComponentDummy.prototype = Component.prototype;\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n    assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true;\n\n    // an immutable object with a single mutable value\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    /*\n     * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n        return type;\n      }\n    } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    }\n    var REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      if (typeof type === 'function') {\n        if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n          // TODO: Create a convention for naming client references with debug info.\n          return null;\n        }\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n      }\n      if (typeof type === 'object') {\n        {\n          if (typeof type.tag === 'number') {\n            error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n          }\n        }\n        switch (type.$$typeof) {\n          case REACT_PROVIDER_TYPE:\n            {\n              return null;\n            }\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            {\n              return getContextName(context) + '.Provider';\n            }\n          case REACT_CONSUMER_TYPE:\n            {\n              var consumer = type;\n              return getContextName(consumer._context) + '.Consumer';\n            }\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || 'Memo';\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableTransitionTracing) {\n        return true;\n      }\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || !enableRenderableContext || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n    function disabledLog() {}\n    disabledLog.__reactDisabledLog = true;\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        disabledDepth++;\n      }\n    }\n    function reenableLogs() {\n      {\n        disabledDepth--;\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n    var prefix;\n    function describeBuiltInComponentFrame(name) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n        return '\\n' + prefix + name;\n      }\n    }\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    /**\n     * Leverages native browser/VM stack frames to get proper details (e.g.\n     * filename, line + col number) for a single component in a component stack. We\n     * do this by:\n     *   (1) throwing and catching an error in the function - this will be our\n     *       control error.\n     *   (2) calling the component which will eventually throw an error that we'll\n     *       catch - this will be our sample error.\n     *   (3) diffing the control and sample error stacks to find the stack frame\n     *       which represents our component.\n     */\n\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n      {\n        var frame = componentFrameCache.get(fn);\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher = null;\n      {\n        previousDispatcher = ReactSharedInternals.H; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactSharedInternals.H = null;\n        disableLogs();\n      }\n      /**\n       * Finding a common stack frame between sample and control errors can be\n       * tricky given the different types and levels of stack trace truncation from\n       * different JS VMs. So instead we'll attempt to control what that common\n       * frame should be through this object method:\n       * Having both the sample and control errors be in the function under the\n       * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n       * `displayName` properties of the function ensures that a stack\n       * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n       * it for both control and sample stacks.\n       */\n\n      var RunInRootFrame = {\n        DetermineComponentFrameRoot: function () {\n          var control;\n          try {\n            // This should throw.\n            if (construct) {\n              // Something should be setting the props in the constructor.\n              var Fake = function () {\n                throw Error();\n              }; // $FlowFixMe[prop-missing]\n\n              Object.defineProperty(Fake.prototype, 'props', {\n                set: function () {\n                  // We use a throwing setter instead of frozen or non-writable props\n                  // because that won't throw in a non-strict mode function.\n                  throw Error();\n                }\n              });\n              if (typeof Reflect === 'object' && Reflect.construct) {\n                // We construct a different control for this case to include any extra\n                // frames added by the construct call.\n                try {\n                  Reflect.construct(Fake, []);\n                } catch (x) {\n                  control = x;\n                }\n                Reflect.construct(fn, [], Fake);\n              } else {\n                try {\n                  Fake.call();\n                } catch (x) {\n                  control = x;\n                } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n                fn.call(Fake.prototype);\n              }\n            } else {\n              try {\n                throw Error();\n              } catch (x) {\n                control = x;\n              } // TODO(luna): This will currently only throw if the function component\n              // tries to access React/ReactDOM/props. We should probably make this throw\n              // in simple components too\n\n              var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n              // component, which we don't yet support. Attach a noop catch handler to\n              // silence the error.\n              // TODO: Implement component stacks for async client components?\n\n              if (maybePromise && typeof maybePromise.catch === 'function') {\n                maybePromise.catch(function () {});\n              }\n            }\n          } catch (sample) {\n            // This is inlined manually because closure doesn't do it for us.\n            if (sample && control && typeof sample.stack === 'string') {\n              return [sample.stack, control.stack];\n            }\n          }\n          return [null, null];\n        }\n      }; // $FlowFixMe[prop-missing]\n\n      RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n      if (namePropDescriptor && namePropDescriptor.configurable) {\n        // V8 utilizes a function's `name` property when generating a stack trace.\n        Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot,\n        // Configurable properties can be updated even if its writable descriptor\n        // is set to `false`.\n        // $FlowFixMe[cannot-write]\n        'name', {\n          value: 'DetermineComponentFrameRoot'\n        });\n      }\n      try {\n        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sampleStack.split('\\n');\n          var controlLines = controlStack.split('\\n');\n          var s = 0;\n          var c = 0;\n          while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n            s++;\n          }\n          while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n            c++;\n          } // We couldn't find our intentionally injected common root frame, attempt\n          // to find another common root frame by search from the bottom of the\n          // control stack...\n\n          if (s === sampleLines.length || c === controlLines.length) {\n            s = sampleLines.length - 1;\n            c = controlLines.length - 1;\n            while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n              // We expect at least one stack frame to be shared.\n              // Typically this will be the root most one. However, stack frames may be\n              // cut off due to maximum stack limits. In this case, one maybe cut off\n              // earlier than the other. We assume that the sample is longer or the same\n              // and there for cut off earlier. So we should find the root most frame in\n              // the sample somewhere in the control.\n              c--;\n            }\n          }\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n                    if (true) {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactSharedInternals.H = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n    function describeFunctionComponentFrame(fn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (type == null) {\n        return '';\n      }\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload));\n              } catch (x) {}\n            }\n        }\n      }\n      return '';\n    }\n    var REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n    function getOwner() {\n      {\n        var dispatcher = ReactSharedInternals.A;\n        if (dispatcher === null) {\n          return null;\n        }\n        return dispatcher.getOwner();\n      }\n    }\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef;\n    var didWarnAboutOldJSXRuntime;\n    {\n      didWarnAboutElementRef = {};\n    }\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      {\n        var warnAboutAccessingKey = function () {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n          }\n        };\n        warnAboutAccessingKey.isReactWarning = true;\n        Object.defineProperty(props, 'key', {\n          get: warnAboutAccessingKey,\n          configurable: true\n        });\n      }\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      {\n        var componentName = getComponentNameFromType(this.type);\n        if (!didWarnAboutElementRef[componentName]) {\n          didWarnAboutElementRef[componentName] = true;\n          error('Accessing element.ref was removed in React 19. ref is now a ' + 'regular prop. It will be removed from the JSX Element ' + 'type in a future release.');\n        } // An undefined `element.ref` is coerced to `null` for\n        // backwards compatibility.\n\n        var refProp = this.props.ref;\n        return refProp !== undefined ? refProp : null;\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n    function ReactElement(type, key, _ref, self, source, owner, props, debugStack, debugTask) {\n      var ref;\n      {\n        // When enableRefAsProp is on, ignore whatever was passed as the ref\n        // argument and treat `props.ref` as the source of truth. The only thing we\n        // use this for is `element.ref`, which will log a deprecation warning on\n        // access. In the next release, we can remove `element.ref` as well as the\n        // `ref` argument.\n        var refProp = props.ref; // An undefined `element.ref` is coerced to `null` for\n        // backwards compatibility.\n\n        ref = refProp !== undefined ? refProp : null;\n      }\n      var element;\n      {\n        // In dev, make `ref` a non-enumerable property with a warning. It's non-\n        // enumerable so that test matchers and serializers don't access it and\n        // trigger the warning.\n        //\n        // `ref` will be removed from the element completely in a future release.\n        element = {\n          // This tag allows us to uniquely identify this as a React Element\n          $$typeof: REACT_ELEMENT_TYPE,\n          // Built-in properties that belong on the element\n          type: type,\n          key: key,\n          props: props,\n          // Record the component responsible for creating this element.\n          _owner: owner\n        };\n        if (ref !== null) {\n          Object.defineProperty(element, 'ref', {\n            enumerable: false,\n            get: elementRefGetterWithDeprecationWarning\n          });\n        } else {\n          // Don't warn on access if a ref is not given. This reduces false\n          // positives in cases where a test serializer uses\n          // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n          // a problem because it bypasses non-enumerability.\n          //\n          // So unfortunately this will trigger a false positive warning in Jest\n          // when the diff is printed:\n          //\n          //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n          //\n          // A bit sketchy, but this is what we've done for the `props.key` and\n          // `props.ref` accessors for years, which implies it will be good enough\n          // for `element.ref`, too. Let's see if anyone complains.\n          Object.defineProperty(element, 'ref', {\n            enumerable: false,\n            value: null\n          });\n        }\n      }\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // debugInfo contains Server Component debug information.\n\n        Object.defineProperty(element, '_debugInfo', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: null\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    }\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n\n    function createElement(type, config, children) {\n      {\n        if (!isValidElementType(type)) {\n          // This is an invalid element type.\n          //\n          // We warn in this case but don't throw. We expect the element creation to\n          // succeed and there will likely be errors in render.\n          var info = '';\n          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n            info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n          }\n          var typeString;\n          if (type === null) {\n            typeString = 'null';\n          } else if (isArray(type)) {\n            typeString = 'array';\n          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n            typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n            info = ' Did you accidentally export a JSX literal instead of a component?';\n          } else {\n            typeString = typeof type;\n          }\n          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        } else {\n          // This is a valid element type.\n          // Skip key warning if the type isn't valid since our key validation logic\n          // doesn't expect a non-string/function type and can throw confusing\n          // errors. We don't want exception behavior to differ between dev and\n          // prod. (Rendering will throw with a helpful message and as soon as the\n          // type is fixed, the key warnings will appear.)\n          for (var i = 2; i < arguments.length; i++) {\n            validateChildKeys(arguments[i], type);\n          }\n        } // Unlike the jsx() runtime, createElement() doesn't warn about key spread.\n      }\n\n      var propName; // Reserved names are extracted\n\n      var props = {};\n      var key = null;\n      var ref = null;\n      if (config != null) {\n        {\n          if (!didWarnAboutOldJSXRuntime && '__self' in config &&\n          // Do not assume this is the result of an oudated JSX transform if key\n          // is present, because the modern JSX transform sometimes outputs\n          // createElement to preserve precedence between a static key and a\n          // spread key. To avoid false positive warnings, we never warn if\n          // there's a key.\n          !('key' in config)) {\n            didWarnAboutOldJSXRuntime = true;\n            warn('Your app (or one of its dependencies) is using an outdated JSX ' + 'transform. Update to the modern JSX transform for ' + 'faster performance: https://react.dev/link/new-jsx-transform');\n          }\n        }\n        if (hasValidRef(config)) ;\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties are added to a new props object\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) &&\n          // Skip over reserved prop names\n          propName !== 'key' && enableRefAsProp &&\n          // Even though we don't use these anymore in the runtime, we don't want\n          // them to appear as props, so in createElement we filter them out.\n          // We don't have to do this in the jsx() runtime because the jsx()\n          // transform never passed these as props; it used separate arguments.\n          propName !== '__self' && propName !== '__source') {\n            {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var _i = 0; _i < childrenLength; _i++) {\n          childArray[_i] = arguments[_i + 2];\n        }\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      } // Resolve default props\n\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n      {\n        if (key || !enableRefAsProp) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n        }\n      }\n      var element = ReactElement(type, key, ref, undefined, undefined, getOwner(), props);\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      }\n      return element;\n    }\n    function cloneAndReplaceKey(oldElement, newKey) {\n      return ReactElement(oldElement.type, newKey,\n      // When enableRefAsProp is on, this argument is ignored. This check only\n      // exists to avoid the `ref` access warning.\n      null, undefined, undefined, oldElement._owner, oldElement.props);\n    }\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n\n    function cloneElement(element, config, children) {\n      if (element === null || element === undefined) {\n        throw new Error(\"The argument must be a React element, but you passed \" + element + \".\");\n      }\n      var propName; // Original props are copied\n\n      var props = assign({}, element.props); // Reserved names are extracted\n\n      var key = element.key;\n      var ref = null; // Owner will be preserved, unless ref is overridden\n\n      var owner = element._owner;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          owner = getOwner();\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties override existing props\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) &&\n          // Skip over reserved prop names\n          propName !== 'key' && enableRefAsProp &&\n          // ...and maybe these, too, though we currently rely on them for\n          // warnings and debug information in dev. Need to decide if we're OK\n          // with dropping them. In the jsx() runtime it's not an issue because\n          // the data gets passed as separate arguments instead of props, but\n          // it would be nice to stop relying on them entirely so we can drop\n          // them from the internal Fiber field.\n          propName !== '__self' && propName !== '__source' &&\n          // Undefined `ref` is ignored by cloneElement. We treat it the same as\n          // if the property were missing. This is mostly for\n          // backwards compatibility.\n          !(propName === 'ref' && config.ref === undefined)) {\n            {\n              {\n                props[propName] = config[propName];\n              }\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        props.children = childArray;\n      }\n      var clonedElement = ReactElement(element.type, key, ref, undefined, undefined, owner, props);\n      for (var _i2 = 2; _i2 < arguments.length; _i2++) {\n        validateChildKeys(arguments[_i2], clonedElement.type);\n      }\n      return clonedElement;\n    }\n    function getDeclarationErrorAddendum() {\n      {\n        var owner = getOwner();\n        if (owner) {\n          var name = getComponentNameFromType(owner.type);\n          if (name) {\n            return '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n        return '';\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n    function validateChildKeys(node, parentType) {\n      {\n        if (typeof node !== 'object' || !node) {\n          return;\n        }\n        if (node.$$typeof === REACT_CLIENT_REFERENCE) ;else if (isArray(node)) {\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            if (isValidElement(child)) {\n              validateExplicitKey(child, parentType);\n            }\n          }\n        } else if (isValidElement(node)) {\n          // This element was passed in a valid location.\n          if (node._store) {\n            node._store.validated = true;\n          }\n        } else {\n          var iteratorFn = getIteratorFn(node);\n          if (typeof iteratorFn === 'function') {\n            // Entry iterators used to provide implicit keys,\n            // but now we print a separate warning for them later.\n            if (iteratorFn !== node.entries) {\n              var iterator = iteratorFn.call(node);\n              if (iterator !== node) {\n                var step;\n                while (!(step = iterator.next()).done) {\n                  if (isValidElement(step.value)) {\n                    validateExplicitKey(step.value, parentType);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var ownerHasKeyUseWarning = {};\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n    function validateExplicitKey(element, parentType) {\n      {\n        if (!element._store || element._store.validated || element.key != null) {\n          return;\n        }\n        element._store.validated = true;\n        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n          return;\n        }\n        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n        // property, it may be the creator of the child that's responsible for\n        // assigning it a key.\n\n        var childOwner = '';\n        if (element && element._owner != null && element._owner !== getOwner()) {\n          var ownerName = null;\n          if (typeof element._owner.tag === 'number') {\n            ownerName = getComponentNameFromType(element._owner.type);\n          } else if (typeof element._owner.name === 'string') {\n            ownerName = element._owner.name;\n          } // Give the component that originally created this child.\n\n          childOwner = \" It was passed a child from \" + ownerName + \".\";\n        }\n        setCurrentlyValidatingElement(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement(null);\n      }\n    }\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          ReactSharedInternals.setExtraStackFrame(stack);\n        } else {\n          ReactSharedInternals.setExtraStackFrame(null);\n        }\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      {\n        var info = getDeclarationErrorAddendum();\n        if (!info) {\n          var parentName = getComponentNameFromType(parentType);\n          if (parentName) {\n            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n          }\n        }\n        return info;\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n    function validateFragmentProps(fragment) {\n      // TODO: Move this to render phase instead of at element creation.\n      {\n        var keys = Object.keys(fragment.props);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement(null);\n            break;\n          }\n        }\n      }\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = key.replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n    function escapeUserProvidedKey(text) {\n      return text.replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    /**\n     * Generate a key string that identifies a element within a set.\n     *\n     * @param {*} element A element that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n\n    function getElementKey(element, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof element === 'object' && element !== null && element.key != null) {\n        // Explicit key\n        {\n          checkKeyStringCoercion(element.key);\n        }\n        return escape('' + element.key);\n      } // Implicit key determined by the index in the set\n\n      return index.toString(36);\n    }\n    function noop$1() {}\n    function resolveThenable(thenable) {\n      switch (thenable.status) {\n        case 'fulfilled':\n          {\n            var fulfilledValue = thenable.value;\n            return fulfilledValue;\n          }\n        case 'rejected':\n          {\n            var rejectedError = thenable.reason;\n            throw rejectedError;\n          }\n        default:\n          {\n            if (typeof thenable.status === 'string') {\n              // Only instrument the thenable if the status if not defined. If\n              // it's defined, but an unknown value, assume it's been instrumented by\n              // some custom userspace implementation. We treat it as \"pending\".\n              // Attach a dummy listener, to ensure that any lazy initialization can\n              // happen. Flight lazily parses JSON when the value is actually awaited.\n              thenable.then(noop$1, noop$1);\n            } else {\n              // This is an uncached thenable that we haven't seen before.\n              // TODO: Detect infinite ping loops caused by uncached promises.\n              var pendingThenable = thenable;\n              pendingThenable.status = 'pending';\n              pendingThenable.then(function (fulfilledValue) {\n                if (thenable.status === 'pending') {\n                  var fulfilledThenable = thenable;\n                  fulfilledThenable.status = 'fulfilled';\n                  fulfilledThenable.value = fulfilledValue;\n                }\n              }, function (error) {\n                if (thenable.status === 'pending') {\n                  var rejectedThenable = thenable;\n                  rejectedThenable.status = 'rejected';\n                  rejectedThenable.reason = error;\n                }\n              });\n            } // Check one more time in case the thenable resolved synchronously.\n\n            switch (thenable.status) {\n              case 'fulfilled':\n                {\n                  var fulfilledThenable = thenable;\n                  return fulfilledThenable.value;\n                }\n              case 'rejected':\n                {\n                  var rejectedThenable = thenable;\n                  var _rejectedError = rejectedThenable.reason;\n                  throw _rejectedError;\n                }\n            }\n          }\n      }\n      throw thenable;\n    }\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n      var type = typeof children;\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n      var invokeCallback = false;\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'bigint':\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n                break;\n              case REACT_LAZY_TYPE:\n                var payload = children._payload;\n                var init = children._init;\n                return mapIntoArray(init(payload), array, escapedPrefix, nameSoFar, callback);\n            }\n        }\n      }\n      if (invokeCallback) {\n        var _child = children;\n        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows:\n\n        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n        if (isArray(mappedChild)) {\n          var escapedChildKey = '';\n          if (childKey != null) {\n            escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n          }\n          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n            return c;\n          });\n        } else if (mappedChild != null) {\n          if (isValidElement(mappedChild)) {\n            {\n              // The `if` statement here prevents auto-disabling of the safe\n              // coercion ESLint rule, so we must manually disable it below.\n              // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                checkKeyStringCoercion(mappedChild.key);\n              }\n            }\n            mappedChild = cloneAndReplaceKey(mappedChild,\n            // Keep both the (mapped) and old keys if they differ, just as\n            // traverseAllChildren used to do for objects as children\n            escapedPrefix + (\n            // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n            mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey(\n            // $FlowFixMe[unsafe-addition]\n            '' + mappedChild.key // eslint-disable-line react-internal/safe-string-coercion\n            ) + '/' : '') + childKey);\n          }\n          array.push(mappedChild);\n        }\n        return 1;\n      }\n      var child;\n      var nextName;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getElementKey(child, i);\n          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          var iterableChildren = children;\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === iterableChildren.entries) {\n              if (!didWarnAboutMaps) {\n                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n              }\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(iterableChildren);\n          var step;\n          var ii = 0; // $FlowFixMe[incompatible-use] `iteratorFn` might return null according to typing.\n\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getElementKey(child, ii++);\n            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n          }\n        } else if (type === 'object') {\n          if (typeof children.then === 'function') {\n            return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);\n          } // eslint-disable-next-line react-internal/safe-string-coercion\n\n          var childrenString = String(children);\n          throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n        }\n      }\n      return subtreeCount;\n    }\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n     *\n     * The provided mapFunction(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        // $FlowFixMe limitation refining abstract types in Flow\n        return children;\n      }\n      var result = [];\n      var count = 0;\n      mapIntoArray(children, result, '', '', function (child) {\n        return func.call(context, child, count++);\n      });\n      return result;\n    }\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrencount\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n\n    function countChildren(children) {\n      var n = 0;\n      mapChildren(children, function () {\n        n++; // Don't return anything\n      });\n\n      return n;\n    }\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      mapChildren(children,\n      // $FlowFixMe[missing-this-annot]\n      function () {\n        forEachFunc.apply(this, arguments); // Don't return anything.\n      }, forEachContext);\n    }\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n     */\n\n    function toArray(children) {\n      return mapChildren(children, function (child) {\n        return child;\n      }) || [];\n    }\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n\n    function onlyChild(children) {\n      if (!isValidElement(children)) {\n        throw new Error('React.Children.only expected to receive a single React element child.');\n      }\n      return children;\n    }\n    function createContext(defaultValue) {\n      // TODO: Second argument used to be an optional `calculateChangedBits`\n      // function. Warn to reserve for future use?\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        // As a workaround to support multiple concurrent renderers, we categorize\n        // some renderers as primary and others as secondary. We only expect\n        // there to be two concurrent renderers at most: React Native (primary) and\n        // Fabric (secondary); React DOM (primary) and React ART (secondary).\n        // Secondary renderers store their context values on separate fields.\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        // Used to track how many concurrent renderers this context currently\n        // supports within in a single renderer. Such as parallel server rendering.\n        _threadCount: 0,\n        // These are circular\n        Provider: null,\n        Consumer: null\n      };\n      {\n        context.Provider = context;\n        context.Consumer = {\n          $$typeof: REACT_CONSUMER_TYPE,\n          _context: context\n        };\n      }\n      {\n        context._currentRenderer = null;\n        context._currentRenderer2 = null;\n      }\n      return context;\n    }\n    var Uninitialized = -1;\n    var Pending = 0;\n    var Resolved = 1;\n    var Rejected = 2;\n    function lazyInitializer(payload) {\n      if (payload._status === Uninitialized) {\n        var ctor = payload._result;\n        var thenable = ctor(); // Transition to the next state.\n        // This might throw either because it's missing or throws. If so, we treat it\n        // as still uninitialized and try again next time. Which is the same as what\n        // happens if the ctor or any wrappers processing the ctor throws. This might\n        // end up fixing it if the resolution was a concurrency bug.\n\n        thenable.then(function (moduleObject) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var resolved = payload;\n            resolved._status = Resolved;\n            resolved._result = moduleObject;\n          }\n        }, function (error) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var rejected = payload;\n            rejected._status = Rejected;\n            rejected._result = error;\n          }\n        });\n        if (payload._status === Uninitialized) {\n          // In case, we're still uninitialized, then we're waiting for the thenable\n          // to resolve. Set it as pending in the meantime.\n          var pending = payload;\n          pending._status = Pending;\n          pending._result = thenable;\n        }\n      }\n      if (payload._status === Resolved) {\n        var moduleObject = payload._result;\n        {\n          if (moduleObject === undefined) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n          }\n        }\n        {\n          if (!('default' in moduleObject)) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        }\n        return moduleObject.default;\n      } else {\n        throw payload._result;\n      }\n    }\n    function lazy(ctor) {\n      var payload = {\n        // We use these fields to store the result.\n        _status: Uninitialized,\n        _result: ctor\n      };\n      var lazyType = {\n        $$typeof: REACT_LAZY_TYPE,\n        _payload: payload,\n        _init: lazyInitializer\n      };\n      return lazyType;\n    }\n    function forwardRef(render) {\n      {\n        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n        } else if (typeof render !== 'function') {\n          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n        } else {\n          if (render.length !== 0 && render.length !== 2) {\n            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n          }\n        }\n        if (render != null) {\n          if (render.defaultProps != null) {\n            error('forwardRef render functions do not support defaultProps. ' + 'Did you accidentally pass a React component?');\n          }\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.forwardRef((props, ref) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!render.name && !render.displayName) {\n              render.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    function memo(type, compare) {\n      {\n        if (!isValidElementType(type)) {\n          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_MEMO_TYPE,\n        type: type,\n        compare: compare === undefined ? null : compare\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.memo((props) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!type.name && !type.displayName) {\n              type.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    function noopCache(fn) {\n      // On the client (i.e. not a Server Components environment) `cache` has\n      // no caching behavior. We just return the function as-is.\n      //\n      // We intend to implement client caching in a future major release. In the\n      // meantime, it's only exposed as an API so that Shared Components can use\n      // per-request caching on the server without breaking on the client. But it\n      // does mean they need to be aware of the behavioral difference.\n      //\n      // The rest of the behavior is the same as the server implementation — it\n      // returns a new reference, extra properties like `displayName` are not\n      // preserved, the length of the new function is 0, etc. That way apps can't\n      // accidentally depend on those details.\n      return function () {\n        // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n        return fn.apply(null, arguments);\n      };\n    }\n    var cache = noopCache;\n    function resolveDispatcher() {\n      var dispatcher = ReactSharedInternals.H;\n      {\n        if (dispatcher === null) {\n          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.');\n        }\n      } // Will result in a null access error if accessed outside render phase. We\n      // intentionally don't throw our own error because this is in a hot path.\n      // Also helps ensure this is inlined.\n\n      return dispatcher;\n    }\n    function useContext(Context) {\n      var dispatcher = resolveDispatcher();\n      {\n        if (Context.$$typeof === REACT_CONSUMER_TYPE) {\n          error('Calling useContext(Context.Consumer) is not supported and will cause bugs. ' + 'Did you mean to call useContext(Context) instead?');\n        }\n      }\n      return dispatcher.useContext(Context);\n    }\n    function useState(initialState) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useState(initialState);\n    }\n    function useReducer(reducer, initialArg, init) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useReducer(reducer, initialArg, init);\n    }\n    function useRef(initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useRef(initialValue);\n    }\n    function useEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useEffect(create, deps);\n    }\n    function useInsertionEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useInsertionEffect(create, deps);\n    }\n    function useLayoutEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useLayoutEffect(create, deps);\n    }\n    function useCallback(callback, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useCallback(callback, deps);\n    }\n    function useMemo(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useMemo(create, deps);\n    }\n    function useImperativeHandle(ref, create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useImperativeHandle(ref, create, deps);\n    }\n    function useDebugValue(value, formatterFn) {\n      {\n        var dispatcher = resolveDispatcher();\n        return dispatcher.useDebugValue(value, formatterFn);\n      }\n    }\n    function useTransition() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useTransition();\n    }\n    function useDeferredValue(value, initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useDeferredValue(value, initialValue);\n    }\n    function useId() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useId();\n    }\n    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    }\n    function useCacheRefresh() {\n      var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n      return dispatcher.useCacheRefresh();\n    }\n    function use(usable) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.use(usable);\n    }\n    function useOptimistic(passthrough, reducer) {\n      var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n      return dispatcher.useOptimistic(passthrough, reducer);\n    }\n    function useActionState(action, initialState, permalink) {\n      {\n        var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n        return dispatcher.useActionState(action, initialState, permalink);\n      }\n    }\n    var reportGlobalError = typeof reportError === 'function' ?\n    // In modern browsers, reportError will dispatch an error event,\n    // emulating an uncaught JavaScript error.\n    reportError : function (error) {\n      if (typeof window === 'object' && typeof window.ErrorEvent === 'function') {\n        // Browser Polyfill\n        var message = typeof error === 'object' && error !== null && typeof error.message === 'string' ?\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        String(error.message) :\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        String(error);\n        var event = new window.ErrorEvent('error', {\n          bubbles: true,\n          cancelable: true,\n          message: message,\n          error: error\n        });\n        var shouldLog = window.dispatchEvent(event);\n        if (!shouldLog) {\n          return;\n        }\n      } else if (typeof process === 'object' &&\n      // $FlowFixMe[method-unbinding]\n      typeof process.emit === 'function') {\n        // Node Polyfill\n        process.emit('uncaughtException', error);\n        return;\n      } // eslint-disable-next-line react-internal/no-production-logging\n\n      console['error'](error);\n    };\n    function startTransition(scope, options) {\n      var prevTransition = ReactSharedInternals.T; // Each renderer registers a callback to receive the return value of\n      // the scope function. This is used to implement async actions.\n\n      var callbacks = new Set();\n      var transition = {\n        _callbacks: callbacks\n      };\n      ReactSharedInternals.T = transition;\n      var currentTransition = ReactSharedInternals.T;\n      {\n        ReactSharedInternals.T._updatedFibers = new Set();\n      }\n      {\n        try {\n          var returnValue = scope();\n          if (typeof returnValue === 'object' && returnValue !== null && typeof returnValue.then === 'function') {\n            callbacks.forEach(function (callback) {\n              return callback(currentTransition, returnValue);\n            });\n            returnValue.then(noop, reportGlobalError);\n          }\n        } catch (error) {\n          reportGlobalError(error);\n        } finally {\n          warnAboutTransitionSubscriptions(prevTransition, currentTransition);\n          ReactSharedInternals.T = prevTransition;\n        }\n      }\n    }\n    function warnAboutTransitionSubscriptions(prevTransition, currentTransition) {\n      {\n        if (prevTransition === null && currentTransition._updatedFibers) {\n          var updatedFibersCount = currentTransition._updatedFibers.size;\n          currentTransition._updatedFibers.clear();\n          if (updatedFibersCount > 10) {\n            warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n          }\n        }\n      }\n    }\n    function noop() {}\n    var didWarnAboutMessageChannel = false;\n    var enqueueTaskImpl = null;\n    function enqueueTask(task) {\n      if (enqueueTaskImpl === null) {\n        try {\n          // read require off the module object to get around the bundlers.\n          // we don't want them to detect a require and bundle a Node polyfill.\n          var requireString = ('require' + Math.random()).slice(0, 7);\n          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n          // version of setImmediate, bypassing fake timers if any.\n\n          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n        } catch (_err) {\n          // we're in a browser\n          // we can't use regular timers because they may still be faked\n          // so we try MessageChannel+postMessage instead\n          enqueueTaskImpl = function (callback) {\n            {\n              if (didWarnAboutMessageChannel === false) {\n                didWarnAboutMessageChannel = true;\n                if (typeof MessageChannel === 'undefined') {\n                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n                }\n              }\n            }\n            var channel = new MessageChannel();\n            channel.port1.onmessage = callback;\n            channel.port2.postMessage(undefined);\n          };\n        }\n      }\n      return enqueueTaskImpl(task);\n    }\n\n    // number of `act` scopes on the stack.\n\n    var actScopeDepth = 0; // We only warn the first time you neglect to await an async `act` scope.\n\n    var didWarnNoAwaitAct = false;\n    function aggregateErrors(errors) {\n      if (errors.length > 1 && typeof AggregateError === 'function') {\n        // eslint-disable-next-line no-undef\n        return new AggregateError(errors);\n      }\n      return errors[0];\n    }\n    function act(callback) {\n      {\n        // When ReactSharedInternals.actQueue is not null, it signals to React that\n        // we're currently inside an `act` scope. React will push all its tasks to\n        // this queue instead of scheduling them with platform APIs.\n        //\n        // We set this to an empty array when we first enter an `act` scope, and\n        // only unset it once we've left the outermost `act` scope — remember that\n        // `act` calls can be nested.\n        //\n        // If we're already inside an `act` scope, reuse the existing queue.\n        var prevIsBatchingLegacy = false;\n        var prevActQueue = ReactSharedInternals.actQueue;\n        var prevActScopeDepth = actScopeDepth;\n        actScopeDepth++;\n        var queue = ReactSharedInternals.actQueue = prevActQueue !== null ? prevActQueue : []; // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n\n        var result; // This tracks whether the `act` call is awaited. In certain cases, not\n        // awaiting it is a mistake, so we will detect that and warn.\n\n        var didAwaitActCall = false;\n        try {\n          // Reset this to `false` right before entering the React work loop. The\n          // only place we ever read this fields is just below, right after running\n          // the callback. So we don't need to reset after the callback runs.\n          if (!disableLegacyMode) ;\n          result = callback();\n          var didScheduleLegacyUpdate = !disableLegacyMode ? ReactSharedInternals.didScheduleLegacyUpdate : false; // Replicate behavior of original `act` implementation in legacy mode,\n          // which flushed updates immediately after the scope function exits, even\n          // if it's an async function.\n\n          if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n            flushActQueue(queue);\n          } // `isBatchingLegacy` gets reset using the regular stack, not the async\n          // one used to track `act` scopes. Why, you may be wondering? Because\n          // that's how it worked before version 18. Yes, it's confusing! We should\n          // delete legacy mode!!\n\n          if (!disableLegacyMode) ;\n        } catch (error) {\n          // `isBatchingLegacy` gets reset using the regular stack, not the async\n          // one used to track `act` scopes. Why, you may be wondering? Because\n          // that's how it worked before version 18. Yes, it's confusing! We should\n          // delete legacy mode!!\n          ReactSharedInternals.thrownErrors.push(error);\n        }\n        if (ReactSharedInternals.thrownErrors.length > 0) {\n          popActScope(prevActQueue, prevActScopeDepth);\n          var thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n          ReactSharedInternals.thrownErrors.length = 0;\n          throw thrownError;\n        }\n        if (result !== null && typeof result === 'object' &&\n        // $FlowFixMe[method-unbinding]\n        typeof result.then === 'function') {\n          // A promise/thenable was returned from the callback. Wait for it to\n          // resolve before flushing the queue.\n          //\n          // If `act` were implemented as an async function, this whole block could\n          // be a single `await` call. That's really the only difference between\n          // this branch and the next one.\n          var thenable = result; // Warn if the an `act` call with an async scope is not awaited. In a\n          // future release, consider making this an error.\n\n          queueSeveralMicrotasks(function () {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n          return {\n            then: function (resolve, reject) {\n              didAwaitActCall = true;\n              thenable.then(function (returnValue) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                if (prevActScopeDepth === 0) {\n                  // We're exiting the outermost `act` scope. Flush the queue.\n                  try {\n                    flushActQueue(queue);\n                    enqueueTask(function () {\n                      return (\n                        // Recursively flush tasks scheduled by a microtask.\n                        recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                      );\n                    });\n                  } catch (error) {\n                    // `thenable` might not be a real promise, and `flushActQueue`\n                    // might throw, so we need to wrap `flushActQueue` in a\n                    // try/catch.\n                    ReactSharedInternals.thrownErrors.push(error);\n                  }\n                  if (ReactSharedInternals.thrownErrors.length > 0) {\n                    var _thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n                    ReactSharedInternals.thrownErrors.length = 0;\n                    reject(_thrownError);\n                  }\n                } else {\n                  resolve(returnValue);\n                }\n              }, function (error) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                if (ReactSharedInternals.thrownErrors.length > 0) {\n                  var _thrownError2 = aggregateErrors(ReactSharedInternals.thrownErrors);\n                  ReactSharedInternals.thrownErrors.length = 0;\n                  reject(_thrownError2);\n                } else {\n                  reject(error);\n                }\n              });\n            }\n          };\n        } else {\n          var returnValue = result; // The callback is not an async function. Exit the current\n          // scope immediately.\n\n          popActScope(prevActQueue, prevActScopeDepth);\n          if (prevActScopeDepth === 0) {\n            // We're exiting the outermost `act` scope. Flush the queue.\n            flushActQueue(queue); // If the queue is not empty, it implies that we intentionally yielded\n            // to the main thread, because something suspended. We will continue\n            // in an asynchronous task.\n            //\n            // Warn if something suspends but the `act` call is not awaited.\n            // In a future release, consider making this an error.\n\n            if (queue.length !== 0) {\n              queueSeveralMicrotasks(function () {\n                if (!didAwaitActCall && !didWarnNoAwaitAct) {\n                  didWarnNoAwaitAct = true;\n                  error('A component suspended inside an `act` scope, but the ' + '`act` call was not awaited. When testing React ' + 'components that depend on asynchronous data, you must ' + 'await the result:\\n\\n' + 'await act(() => ...)');\n                }\n              });\n            } // Like many things in this module, this is next part is confusing.\n            //\n            // We do not currently require every `act` call that is passed a\n            // callback to be awaited, through arguably we should. Since this\n            // callback was synchronous, we need to exit the current scope before\n            // returning.\n            //\n            // However, if thenable we're about to return *is* awaited, we'll\n            // immediately restore the current scope. So it shouldn't observable.\n            //\n            // This doesn't affect the case where the scope callback is async,\n            // because we always require those calls to be awaited.\n            //\n            // TODO: In a future version, consider always requiring all `act` calls\n            // to be awaited, regardless of whether the callback is sync or async.\n\n            ReactSharedInternals.actQueue = null;\n          }\n          if (ReactSharedInternals.thrownErrors.length > 0) {\n            var _thrownError3 = aggregateErrors(ReactSharedInternals.thrownErrors);\n            ReactSharedInternals.thrownErrors.length = 0;\n            throw _thrownError3;\n          }\n          return {\n            then: function (resolve, reject) {\n              didAwaitActCall = true;\n              if (prevActScopeDepth === 0) {\n                // If the `act` call is awaited, restore the queue we were\n                // using before (see long comment above) so we can flush it.\n                ReactSharedInternals.actQueue = queue;\n                enqueueTask(function () {\n                  return (\n                    // Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                  );\n                });\n              } else {\n                resolve(returnValue);\n              }\n            }\n          };\n        }\n      }\n    }\n    function popActScope(prevActQueue, prevActScopeDepth) {\n      {\n        if (prevActScopeDepth !== actScopeDepth - 1) {\n          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n        }\n        actScopeDepth = prevActScopeDepth;\n      }\n    }\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n      {\n        // Check if any tasks were scheduled asynchronously.\n        var queue = ReactSharedInternals.actQueue;\n        if (queue !== null) {\n          if (queue.length !== 0) {\n            // Async tasks were scheduled, mostly likely in a microtask.\n            // Keep flushing until there are no more.\n            try {\n              flushActQueue(queue); // The work we just performed may have schedule additional async\n              // tasks. Wait a macrotask and check again.\n\n              enqueueTask(function () {\n                return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              });\n              return;\n            } catch (error) {\n              // Leave remaining tasks on the queue if something throws.\n              ReactSharedInternals.thrownErrors.push(error);\n            }\n          } else {\n            // The queue is empty. We can finish.\n            ReactSharedInternals.actQueue = null;\n          }\n        }\n        if (ReactSharedInternals.thrownErrors.length > 0) {\n          var thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n          ReactSharedInternals.thrownErrors.length = 0;\n          reject(thrownError);\n        } else {\n          resolve(returnValue);\n        }\n      }\n    }\n    var isFlushing = false;\n    function flushActQueue(queue) {\n      {\n        if (!isFlushing) {\n          // Prevent re-entrance.\n          isFlushing = true;\n          var i = 0;\n          try {\n            for (; i < queue.length; i++) {\n              var callback = queue[i];\n              do {\n                ReactSharedInternals.didUsePromise = false;\n                var continuation = callback(false);\n                if (continuation !== null) {\n                  if (ReactSharedInternals.didUsePromise) {\n                    // The component just suspended. Yield to the main thread in\n                    // case the promise is already resolved. If so, it will ping in\n                    // a microtask and we can resume without unwinding the stack.\n                    queue[i] = callback;\n                    queue.splice(0, i);\n                    return;\n                  }\n                  callback = continuation;\n                } else {\n                  break;\n                }\n              } while (true);\n            } // We flushed the entire queue.\n\n            queue.length = 0;\n          } catch (error) {\n            // If something throws, leave the remaining callbacks on the queue.\n            queue.splice(0, i + 1);\n            ReactSharedInternals.thrownErrors.push(error);\n          } finally {\n            isFlushing = false;\n          }\n        }\n      }\n    } // Some of our warnings attempt to detect if the `act` call is awaited by\n    // checking in an asynchronous task. Wait a few microtasks before checking. The\n    // only reason one isn't sufficient is we want to accommodate the case where an\n    // `act` call is returned from an async function without first being awaited,\n    // since that's a somewhat common pattern. If you do this too many times in a\n    // nested sequence, you might get a warning, but you can always fix by awaiting\n    // the call.\n    //\n    // A macrotask would also work (and is the fallback) but depending on the test\n    // environment it may cause the warning to fire too late.\n\n    var queueSeveralMicrotasks = typeof queueMicrotask === 'function' ? function (callback) {\n      queueMicrotask(function () {\n        return queueMicrotask(callback);\n      });\n    } : enqueueTask;\n    var Children = {\n      map: mapChildren,\n      forEach: forEachChildren,\n      count: countChildren,\n      toArray: toArray,\n      only: onlyChild\n    };\n    exports.Children = Children;\n    exports.Component = Component;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.Profiler = REACT_PROFILER_TYPE;\n    exports.PureComponent = PureComponent;\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\n    exports.Suspense = REACT_SUSPENSE_TYPE;\n    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;\n    exports.act = act;\n    exports.cache = cache;\n    exports.cloneElement = cloneElement;\n    exports.createContext = createContext;\n    exports.createElement = createElement;\n    exports.createRef = createRef;\n    exports.forwardRef = forwardRef;\n    exports.isValidElement = isValidElement;\n    exports.lazy = lazy;\n    exports.memo = memo;\n    exports.startTransition = startTransition;\n    exports.unstable_useCacheRefresh = useCacheRefresh;\n    exports.use = use;\n    exports.useActionState = useActionState;\n    exports.useCallback = useCallback;\n    exports.useContext = useContext;\n    exports.useDebugValue = useDebugValue;\n    exports.useDeferredValue = useDeferredValue;\n    exports.useEffect = useEffect;\n    exports.useId = useId;\n    exports.useImperativeHandle = useImperativeHandle;\n    exports.useInsertionEffect = useInsertionEffect;\n    exports.useLayoutEffect = useLayoutEffect;\n    exports.useMemo = useMemo;\n    exports.useOptimistic = useOptimistic;\n    exports.useReducer = useReducer;\n    exports.useRef = useRef;\n    exports.useState = useState;\n    exports.useSyncExternalStore = useSyncExternalStore;\n    exports.useTransition = useTransition;\n    exports.version = ReactVersion;\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2335, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/compiled/react/index.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}"],"names":[],"mappings":";;AAAA;AAEA;;OAEO;IACL,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 2343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2347, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    var React = require(\"next/dist/compiled/react\");\n\n    // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    // as a normal prop instead of stripping it from the props object.\n    // Passes `ref` as a normal prop instead of stripping it from the props object\n    // during element creation.\n\n    var enableRefAsProp = true;\n    var enableRenderableContext = true; // Enables the `initialValue` option for `useDeferredValue`\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false;\n    var REACT_ELEMENT_TYPE = Symbol.for('react.transitional.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\n    var REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n    var ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning('error', format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var stack = ReactSharedInternals.getStackAddendum();\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    }\n    var REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      if (typeof type === 'function') {\n        if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n          // TODO: Create a convention for naming client references with debug info.\n          return null;\n        }\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n      }\n      if (typeof type === 'object') {\n        {\n          if (typeof type.tag === 'number') {\n            error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n          }\n        }\n        switch (type.$$typeof) {\n          case REACT_PROVIDER_TYPE:\n            {\n              return null;\n            }\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            {\n              return getContextName(context) + '.Provider';\n            }\n          case REACT_CONSUMER_TYPE:\n            {\n              var consumer = type;\n              return getContextName(consumer._context) + '.Consumer';\n            }\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || 'Memo';\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var assign = Object.assign;\n\n    /*\n     * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n        return type;\n      }\n    } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n\n    var REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableTransitionTracing) {\n        return true;\n      }\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || !enableRenderableContext || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n    function disabledLog() {}\n    disabledLog.__reactDisabledLog = true;\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        disabledDepth++;\n      }\n    }\n    function reenableLogs() {\n      {\n        disabledDepth--;\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n    var prefix;\n    function describeBuiltInComponentFrame(name) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n        return '\\n' + prefix + name;\n      }\n    }\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    /**\n     * Leverages native browser/VM stack frames to get proper details (e.g.\n     * filename, line + col number) for a single component in a component stack. We\n     * do this by:\n     *   (1) throwing and catching an error in the function - this will be our\n     *       control error.\n     *   (2) calling the component which will eventually throw an error that we'll\n     *       catch - this will be our sample error.\n     *   (3) diffing the control and sample error stacks to find the stack frame\n     *       which represents our component.\n     */\n\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n      {\n        var frame = componentFrameCache.get(fn);\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher = null;\n      {\n        previousDispatcher = ReactSharedInternals.H; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactSharedInternals.H = null;\n        disableLogs();\n      }\n      /**\n       * Finding a common stack frame between sample and control errors can be\n       * tricky given the different types and levels of stack trace truncation from\n       * different JS VMs. So instead we'll attempt to control what that common\n       * frame should be through this object method:\n       * Having both the sample and control errors be in the function under the\n       * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n       * `displayName` properties of the function ensures that a stack\n       * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n       * it for both control and sample stacks.\n       */\n\n      var RunInRootFrame = {\n        DetermineComponentFrameRoot: function () {\n          var control;\n          try {\n            // This should throw.\n            if (construct) {\n              // Something should be setting the props in the constructor.\n              var Fake = function () {\n                throw Error();\n              }; // $FlowFixMe[prop-missing]\n\n              Object.defineProperty(Fake.prototype, 'props', {\n                set: function () {\n                  // We use a throwing setter instead of frozen or non-writable props\n                  // because that won't throw in a non-strict mode function.\n                  throw Error();\n                }\n              });\n              if (typeof Reflect === 'object' && Reflect.construct) {\n                // We construct a different control for this case to include any extra\n                // frames added by the construct call.\n                try {\n                  Reflect.construct(Fake, []);\n                } catch (x) {\n                  control = x;\n                }\n                Reflect.construct(fn, [], Fake);\n              } else {\n                try {\n                  Fake.call();\n                } catch (x) {\n                  control = x;\n                } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n                fn.call(Fake.prototype);\n              }\n            } else {\n              try {\n                throw Error();\n              } catch (x) {\n                control = x;\n              } // TODO(luna): This will currently only throw if the function component\n              // tries to access React/ReactDOM/props. We should probably make this throw\n              // in simple components too\n\n              var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n              // component, which we don't yet support. Attach a noop catch handler to\n              // silence the error.\n              // TODO: Implement component stacks for async client components?\n\n              if (maybePromise && typeof maybePromise.catch === 'function') {\n                maybePromise.catch(function () {});\n              }\n            }\n          } catch (sample) {\n            // This is inlined manually because closure doesn't do it for us.\n            if (sample && control && typeof sample.stack === 'string') {\n              return [sample.stack, control.stack];\n            }\n          }\n          return [null, null];\n        }\n      }; // $FlowFixMe[prop-missing]\n\n      RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n      if (namePropDescriptor && namePropDescriptor.configurable) {\n        // V8 utilizes a function's `name` property when generating a stack trace.\n        Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot,\n        // Configurable properties can be updated even if its writable descriptor\n        // is set to `false`.\n        // $FlowFixMe[cannot-write]\n        'name', {\n          value: 'DetermineComponentFrameRoot'\n        });\n      }\n      try {\n        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sampleStack.split('\\n');\n          var controlLines = controlStack.split('\\n');\n          var s = 0;\n          var c = 0;\n          while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n            s++;\n          }\n          while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n            c++;\n          } // We couldn't find our intentionally injected common root frame, attempt\n          // to find another common root frame by search from the bottom of the\n          // control stack...\n\n          if (s === sampleLines.length || c === controlLines.length) {\n            s = sampleLines.length - 1;\n            c = controlLines.length - 1;\n            while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n              // We expect at least one stack frame to be shared.\n              // Typically this will be the root most one. However, stack frames may be\n              // cut off due to maximum stack limits. In this case, one maybe cut off\n              // earlier than the other. We assume that the sample is longer or the same\n              // and there for cut off earlier. So we should find the root most frame in\n              // the sample somewhere in the control.\n              c--;\n            }\n          }\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n                    if (true) {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactSharedInternals.H = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n    function describeFunctionComponentFrame(fn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (type == null) {\n        return '';\n      }\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload));\n              } catch (x) {}\n            }\n        }\n      }\n      return '';\n    }\n    var REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n    function getOwner() {\n      {\n        var dispatcher = ReactSharedInternals.A;\n        if (dispatcher === null) {\n          return null;\n        }\n        return dispatcher.getOwner();\n      }\n    }\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef;\n    {\n      didWarnAboutElementRef = {};\n    }\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      {\n        var warnAboutAccessingKey = function () {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n          }\n        };\n        warnAboutAccessingKey.isReactWarning = true;\n        Object.defineProperty(props, 'key', {\n          get: warnAboutAccessingKey,\n          configurable: true\n        });\n      }\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      {\n        var componentName = getComponentNameFromType(this.type);\n        if (!didWarnAboutElementRef[componentName]) {\n          didWarnAboutElementRef[componentName] = true;\n          error('Accessing element.ref was removed in React 19. ref is now a ' + 'regular prop. It will be removed from the JSX Element ' + 'type in a future release.');\n        } // An undefined `element.ref` is coerced to `null` for\n        // backwards compatibility.\n\n        var refProp = this.props.ref;\n        return refProp !== undefined ? refProp : null;\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n    function ReactElement(type, key, _ref, self, source, owner, props, debugStack, debugTask) {\n      var ref;\n      {\n        // When enableRefAsProp is on, ignore whatever was passed as the ref\n        // argument and treat `props.ref` as the source of truth. The only thing we\n        // use this for is `element.ref`, which will log a deprecation warning on\n        // access. In the next release, we can remove `element.ref` as well as the\n        // `ref` argument.\n        var refProp = props.ref; // An undefined `element.ref` is coerced to `null` for\n        // backwards compatibility.\n\n        ref = refProp !== undefined ? refProp : null;\n      }\n      var element;\n      {\n        // In dev, make `ref` a non-enumerable property with a warning. It's non-\n        // enumerable so that test matchers and serializers don't access it and\n        // trigger the warning.\n        //\n        // `ref` will be removed from the element completely in a future release.\n        element = {\n          // This tag allows us to uniquely identify this as a React Element\n          $$typeof: REACT_ELEMENT_TYPE,\n          // Built-in properties that belong on the element\n          type: type,\n          key: key,\n          props: props,\n          // Record the component responsible for creating this element.\n          _owner: owner\n        };\n        if (ref !== null) {\n          Object.defineProperty(element, 'ref', {\n            enumerable: false,\n            get: elementRefGetterWithDeprecationWarning\n          });\n        } else {\n          // Don't warn on access if a ref is not given. This reduces false\n          // positives in cases where a test serializer uses\n          // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n          // a problem because it bypasses non-enumerability.\n          //\n          // So unfortunately this will trigger a false positive warning in Jest\n          // when the diff is printed:\n          //\n          //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n          //\n          // A bit sketchy, but this is what we've done for the `props.key` and\n          // `props.ref` accessors for years, which implies it will be good enough\n          // for `element.ref`, too. Let's see if anyone complains.\n          Object.defineProperty(element, 'ref', {\n            enumerable: false,\n            value: null\n          });\n        }\n      }\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // debugInfo contains Server Component debug information.\n\n        Object.defineProperty(element, '_debugInfo', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: null\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    }\n    // support `jsx` and `jsxs` when running in development. This supports the case\n    // where a third-party dependency ships code that was compiled for production;\n    // we want to still provide warnings in development.\n    //\n    // So these functions are the _dev_ implementations of the _production_\n    // API signatures.\n    //\n    // Since these functions are dev-only, it's ok to add an indirection here. They\n    // only exist to provide different versions of `isStaticChildren`. (We shouldn't\n    // use this pattern for the prod versions, though, because it will add an call\n    // frame.)\n\n    function jsxProdSignatureRunningInDevWithDynamicChildren(type, config, maybeKey, source, self) {\n      {\n        var isStaticChildren = false;\n        return jsxDEV(type, config, maybeKey, isStaticChildren, source, self);\n      }\n    }\n    function jsxProdSignatureRunningInDevWithStaticChildren(type, config, maybeKey, source, self) {\n      {\n        var isStaticChildren = true;\n        return jsxDEV(type, config, maybeKey, isStaticChildren, source, self);\n      }\n    }\n    var didWarnAboutKeySpread = {};\n    /**\n     * https://github.com/reactjs/rfcs/pull/107\n     * @param {*} type\n     * @param {object} props\n     * @param {string} key\n     */\n\n    function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n      {\n        if (!isValidElementType(type)) {\n          // This is an invalid element type.\n          //\n          // We warn in this case but don't throw. We expect the element creation to\n          // succeed and there will likely be errors in render.\n          var info = '';\n          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n            info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n          }\n          var typeString;\n          if (type === null) {\n            typeString = 'null';\n          } else if (isArray(type)) {\n            typeString = 'array';\n          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n            typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n            info = ' Did you accidentally export a JSX literal instead of a component?';\n          } else {\n            typeString = typeof type;\n          }\n          error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        } else {\n          // This is a valid element type.\n          // Skip key warning if the type isn't valid since our key validation logic\n          // doesn't expect a non-string/function type and can throw confusing\n          // errors. We don't want exception behavior to differ between dev and\n          // prod. (Rendering will throw with a helpful message and as soon as the\n          // type is fixed, the key warnings will appear.)\n          var children = config.children;\n          if (children !== undefined) {\n            if (isStaticChildren) {\n              if (isArray(children)) {\n                for (var i = 0; i < children.length; i++) {\n                  validateChildKeys(children[i], type);\n                }\n                if (Object.freeze) {\n                  Object.freeze(children);\n                }\n              } else {\n                error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n              }\n            } else {\n              validateChildKeys(children, type);\n            }\n          }\n        } // Warn about key spread regardless of whether the type is valid.\n\n        if (hasOwnProperty.call(config, 'key')) {\n          var componentName = getComponentNameFromType(type);\n          var keys = Object.keys(config).filter(function (k) {\n            return k !== 'key';\n          });\n          var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n          if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n            var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n            error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n            didWarnAboutKeySpread[componentName + beforeExample] = true;\n          }\n        }\n        var key = null;\n        var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n        // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n        // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n        // but as an intermediary step, we will use jsxDEV for everything except\n        // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n        // key is explicitly declared to be undefined or not.\n\n        if (maybeKey !== undefined) {\n          {\n            checkKeyStringCoercion(maybeKey);\n          }\n          key = '' + maybeKey;\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        }\n        if (hasValidRef(config)) ;\n        var props;\n        if (!('key' in config)) {\n          // If key was not spread in, we can reuse the original props object. This\n          // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n          // target and the compiler always passes a new object. For `createElement`,\n          // we can't assume a new object is passed every time because it can be\n          // called manually.\n          //\n          // Spreading key is a warning in dev. In a future release, we will not\n          // remove a spread key from the props object. (But we'll still warn.) We'll\n          // always pass the object straight through.\n          props = config;\n        } else {\n          // We need to remove reserved props (key, prop, ref). Create a fresh props\n          // object and copy over all the non-reserved props. We don't use `delete`\n          // because in V8 it will deopt the object to dictionary mode.\n          props = {};\n          for (var propName in config) {\n            // Skip over reserved prop names\n            if (propName !== 'key' && enableRefAsProp) {\n              {\n                props[propName] = config[propName];\n              }\n            }\n          }\n        }\n        if (key || !enableRefAsProp) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n        }\n        var element = ReactElement(type, key, ref, self, source, getOwner(), props);\n        if (type === REACT_FRAGMENT_TYPE) {\n          validateFragmentProps(element);\n        }\n        return element;\n      }\n    }\n    function getDeclarationErrorAddendum() {\n      {\n        var owner = getOwner();\n        if (owner) {\n          var name = getComponentNameFromType(owner.type);\n          if (name) {\n            return '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n        return '';\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n    function validateChildKeys(node, parentType) {\n      {\n        if (typeof node !== 'object' || !node) {\n          return;\n        }\n        if (node.$$typeof === REACT_CLIENT_REFERENCE) ;else if (isArray(node)) {\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            if (isValidElement(child)) {\n              validateExplicitKey(child, parentType);\n            }\n          }\n        } else if (isValidElement(node)) {\n          // This element was passed in a valid location.\n          if (node._store) {\n            node._store.validated = true;\n          }\n        } else {\n          var iteratorFn = getIteratorFn(node);\n          if (typeof iteratorFn === 'function') {\n            // Entry iterators used to provide implicit keys,\n            // but now we print a separate warning for them later.\n            if (iteratorFn !== node.entries) {\n              var iterator = iteratorFn.call(node);\n              if (iterator !== node) {\n                var step;\n                while (!(step = iterator.next()).done) {\n                  if (isValidElement(step.value)) {\n                    validateExplicitKey(step.value, parentType);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var ownerHasKeyUseWarning = {};\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n    function validateExplicitKey(element, parentType) {\n      {\n        if (!element._store || element._store.validated || element.key != null) {\n          return;\n        }\n        element._store.validated = true;\n        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n          return;\n        }\n        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n        // property, it may be the creator of the child that's responsible for\n        // assigning it a key.\n\n        var childOwner = '';\n        if (element && element._owner != null && element._owner !== getOwner()) {\n          var ownerName = null;\n          if (typeof element._owner.tag === 'number') {\n            ownerName = getComponentNameFromType(element._owner.type);\n          } else if (typeof element._owner.name === 'string') {\n            ownerName = element._owner.name;\n          } // Give the component that originally created this child.\n\n          childOwner = \" It was passed a child from \" + ownerName + \".\";\n        }\n        setCurrentlyValidatingElement(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement(null);\n      }\n    }\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          ReactSharedInternals.setExtraStackFrame(stack);\n        } else {\n          ReactSharedInternals.setExtraStackFrame(null);\n        }\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      {\n        var info = getDeclarationErrorAddendum();\n        if (!info) {\n          var parentName = getComponentNameFromType(parentType);\n          if (parentName) {\n            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n          }\n        }\n        return info;\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n    function validateFragmentProps(fragment) {\n      // TODO: Move this to render phase instead of at element creation.\n      {\n        var keys = Object.keys(fragment.props);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement(null);\n            break;\n          }\n        }\n      }\n    }\n    var jsx = jsxProdSignatureRunningInDevWithDynamicChildren; // we may want to special case jsxs internally to take advantage of static children.\n    // for now we can ship identical prod functions\n\n    var jsxs = jsxProdSignatureRunningInDevWithStaticChildren;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsx = jsx;\n    exports.jsxs = jsxs;\n  })();\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3423, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/compiled/react/jsx-runtime.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}"],"names":[],"mappings":";;AAAA;AAEA;;OAEO;IACL,OAAO,OAAO;AAChB"}},
    {"offset": {"line": 3431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}