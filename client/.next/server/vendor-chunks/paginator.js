/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/paginator";
exports.ids = ["vendor-chunks/paginator"];
exports.modules = {

/***/ "(ssr)/./node_modules/paginator/index.js":
/*!*****************************************!*\
  !*** ./node_modules/paginator/index.js ***!
  \*****************************************/
/***/ ((module) => {

eval("module.exports = Paginator;\n\n// Paginator constructor\n//\n// `per_page` is the number of results per page, `length` is the number of\n// pages to display. They default to `25` and `10` respectively.\nfunction Paginator(per_page, length) {\n  // You really should be calling this with `new Paginator`, but WHATEVER.\n  if (!(this instanceof Paginator)) {\n    return new Paginator(per_page, length);\n  }\n\n  // Woo, defaults!\n  this.per_page = per_page || 25;\n  this.length = length || 10;\n}\n\n// Build an object with all the necessary information for outputting pagination\n// controls.\n//\n// (new Paginator(paginator.build(100, 2)\nPaginator.prototype.build = function(total_results, current_page) {\n  // We want the number of pages, rounded up to the nearest page.\n  var total_pages = Math.ceil(total_results / this.per_page);\n\n  // Ensure both total_results and current_page are treated as Numbers\n  total_results = parseInt(total_results, 10);\n  current_page  = parseInt(current_page, 10) || 1;\n\n  // Obviously we can't be on a negative or 0 page.\n  if (current_page < 1) { current_page = 1; }\n  // If the user has done something like /page/99999 we want to clamp that back\n  // down.\n  if (current_page > total_pages) { current_page = total_pages; }\n\n  // This is the first page to be displayed as a numbered link.\n  var first_page = Math.max(1, current_page - Math.floor(this.length / 2));\n\n  // And here's the last page to be displayed specifically.\n  var last_page = Math.min(total_pages, current_page + Math.floor(this.length / 2));\n\n  // This is triggered if we're at or near one of the extremes; we won't have\n  // enough page links. We need to adjust our bounds accordingly.\n  if (last_page - first_page + 1 < this.length) {\n    if (current_page < (total_pages / 2)) {\n      last_page = Math.min(total_pages, last_page + (this.length - (last_page - first_page)));\n    } else {\n      first_page = Math.max(1, first_page - (this.length - (last_page - first_page)));\n    }\n  }\n\n  // This can be triggered if the user wants an odd number of pages.\n  if (last_page - first_page + 1 > this.length) {\n    // We want to move towards whatever extreme we're closest to at the time.\n    if (current_page > (total_pages / 2)) {\n      first_page++;\n    } else {\n      last_page--;\n    }\n  }\n\n  // First result on the page. This, along with the field below, can be used to\n  // do \"showing x to y of z results\" style things.\n  var first_result = this.per_page * (current_page - 1);\n  if (first_result < 0) { first_result = 0; }\n\n  // Last result on the page.\n  var last_result = (this.per_page * current_page) - 1;\n  if (last_result < 0) { last_result = 0; }\n  if (last_result > Math.max(total_results - 1, 0)) { last_result = Math.max(total_results - 1, 0); }\n\n  // GIMME THAT OBJECT\n  return {\n    total_pages: total_pages,\n    pages: Math.min(last_page - first_page + 1, total_pages),\n    current_page: current_page,\n    first_page: first_page,\n    last_page: last_page,\n    previous_page: current_page - 1,\n    next_page: current_page + 1,\n    has_previous_page: current_page > 1,\n    has_next_page: current_page < total_pages,\n    total_results: total_results,\n    results: Math.min(last_result - first_result + 1, total_results),\n    first_result: first_result,\n    last_result: last_result,\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGFnaW5hdG9yL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLG9DQUFvQzs7QUFFcEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHNEQUFzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9wYWdpbmF0b3IvaW5kZXguanM/YzBkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFBhZ2luYXRvcjtcblxuLy8gUGFnaW5hdG9yIGNvbnN0cnVjdG9yXG4vL1xuLy8gYHBlcl9wYWdlYCBpcyB0aGUgbnVtYmVyIG9mIHJlc3VsdHMgcGVyIHBhZ2UsIGBsZW5ndGhgIGlzIHRoZSBudW1iZXIgb2Zcbi8vIHBhZ2VzIHRvIGRpc3BsYXkuIFRoZXkgZGVmYXVsdCB0byBgMjVgIGFuZCBgMTBgIHJlc3BlY3RpdmVseS5cbmZ1bmN0aW9uIFBhZ2luYXRvcihwZXJfcGFnZSwgbGVuZ3RoKSB7XG4gIC8vIFlvdSByZWFsbHkgc2hvdWxkIGJlIGNhbGxpbmcgdGhpcyB3aXRoIGBuZXcgUGFnaW5hdG9yYCwgYnV0IFdIQVRFVkVSLlxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUGFnaW5hdG9yKSkge1xuICAgIHJldHVybiBuZXcgUGFnaW5hdG9yKHBlcl9wYWdlLCBsZW5ndGgpO1xuICB9XG5cbiAgLy8gV29vLCBkZWZhdWx0cyFcbiAgdGhpcy5wZXJfcGFnZSA9IHBlcl9wYWdlIHx8IDI1O1xuICB0aGlzLmxlbmd0aCA9IGxlbmd0aCB8fCAxMDtcbn1cblxuLy8gQnVpbGQgYW4gb2JqZWN0IHdpdGggYWxsIHRoZSBuZWNlc3NhcnkgaW5mb3JtYXRpb24gZm9yIG91dHB1dHRpbmcgcGFnaW5hdGlvblxuLy8gY29udHJvbHMuXG4vL1xuLy8gKG5ldyBQYWdpbmF0b3IocGFnaW5hdG9yLmJ1aWxkKDEwMCwgMilcblBhZ2luYXRvci5wcm90b3R5cGUuYnVpbGQgPSBmdW5jdGlvbih0b3RhbF9yZXN1bHRzLCBjdXJyZW50X3BhZ2UpIHtcbiAgLy8gV2Ugd2FudCB0aGUgbnVtYmVyIG9mIHBhZ2VzLCByb3VuZGVkIHVwIHRvIHRoZSBuZWFyZXN0IHBhZ2UuXG4gIHZhciB0b3RhbF9wYWdlcyA9IE1hdGguY2VpbCh0b3RhbF9yZXN1bHRzIC8gdGhpcy5wZXJfcGFnZSk7XG5cbiAgLy8gRW5zdXJlIGJvdGggdG90YWxfcmVzdWx0cyBhbmQgY3VycmVudF9wYWdlIGFyZSB0cmVhdGVkIGFzIE51bWJlcnNcbiAgdG90YWxfcmVzdWx0cyA9IHBhcnNlSW50KHRvdGFsX3Jlc3VsdHMsIDEwKTtcbiAgY3VycmVudF9wYWdlICA9IHBhcnNlSW50KGN1cnJlbnRfcGFnZSwgMTApIHx8IDE7XG5cbiAgLy8gT2J2aW91c2x5IHdlIGNhbid0IGJlIG9uIGEgbmVnYXRpdmUgb3IgMCBwYWdlLlxuICBpZiAoY3VycmVudF9wYWdlIDwgMSkgeyBjdXJyZW50X3BhZ2UgPSAxOyB9XG4gIC8vIElmIHRoZSB1c2VyIGhhcyBkb25lIHNvbWV0aGluZyBsaWtlIC9wYWdlLzk5OTk5IHdlIHdhbnQgdG8gY2xhbXAgdGhhdCBiYWNrXG4gIC8vIGRvd24uXG4gIGlmIChjdXJyZW50X3BhZ2UgPiB0b3RhbF9wYWdlcykgeyBjdXJyZW50X3BhZ2UgPSB0b3RhbF9wYWdlczsgfVxuXG4gIC8vIFRoaXMgaXMgdGhlIGZpcnN0IHBhZ2UgdG8gYmUgZGlzcGxheWVkIGFzIGEgbnVtYmVyZWQgbGluay5cbiAgdmFyIGZpcnN0X3BhZ2UgPSBNYXRoLm1heCgxLCBjdXJyZW50X3BhZ2UgLSBNYXRoLmZsb29yKHRoaXMubGVuZ3RoIC8gMikpO1xuXG4gIC8vIEFuZCBoZXJlJ3MgdGhlIGxhc3QgcGFnZSB0byBiZSBkaXNwbGF5ZWQgc3BlY2lmaWNhbGx5LlxuICB2YXIgbGFzdF9wYWdlID0gTWF0aC5taW4odG90YWxfcGFnZXMsIGN1cnJlbnRfcGFnZSArIE1hdGguZmxvb3IodGhpcy5sZW5ndGggLyAyKSk7XG5cbiAgLy8gVGhpcyBpcyB0cmlnZ2VyZWQgaWYgd2UncmUgYXQgb3IgbmVhciBvbmUgb2YgdGhlIGV4dHJlbWVzOyB3ZSB3b24ndCBoYXZlXG4gIC8vIGVub3VnaCBwYWdlIGxpbmtzLiBXZSBuZWVkIHRvIGFkanVzdCBvdXIgYm91bmRzIGFjY29yZGluZ2x5LlxuICBpZiAobGFzdF9wYWdlIC0gZmlyc3RfcGFnZSArIDEgPCB0aGlzLmxlbmd0aCkge1xuICAgIGlmIChjdXJyZW50X3BhZ2UgPCAodG90YWxfcGFnZXMgLyAyKSkge1xuICAgICAgbGFzdF9wYWdlID0gTWF0aC5taW4odG90YWxfcGFnZXMsIGxhc3RfcGFnZSArICh0aGlzLmxlbmd0aCAtIChsYXN0X3BhZ2UgLSBmaXJzdF9wYWdlKSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmaXJzdF9wYWdlID0gTWF0aC5tYXgoMSwgZmlyc3RfcGFnZSAtICh0aGlzLmxlbmd0aCAtIChsYXN0X3BhZ2UgLSBmaXJzdF9wYWdlKSkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFRoaXMgY2FuIGJlIHRyaWdnZXJlZCBpZiB0aGUgdXNlciB3YW50cyBhbiBvZGQgbnVtYmVyIG9mIHBhZ2VzLlxuICBpZiAobGFzdF9wYWdlIC0gZmlyc3RfcGFnZSArIDEgPiB0aGlzLmxlbmd0aCkge1xuICAgIC8vIFdlIHdhbnQgdG8gbW92ZSB0b3dhcmRzIHdoYXRldmVyIGV4dHJlbWUgd2UncmUgY2xvc2VzdCB0byBhdCB0aGUgdGltZS5cbiAgICBpZiAoY3VycmVudF9wYWdlID4gKHRvdGFsX3BhZ2VzIC8gMikpIHtcbiAgICAgIGZpcnN0X3BhZ2UrKztcbiAgICB9IGVsc2Uge1xuICAgICAgbGFzdF9wYWdlLS07XG4gICAgfVxuICB9XG5cbiAgLy8gRmlyc3QgcmVzdWx0IG9uIHRoZSBwYWdlLiBUaGlzLCBhbG9uZyB3aXRoIHRoZSBmaWVsZCBiZWxvdywgY2FuIGJlIHVzZWQgdG9cbiAgLy8gZG8gXCJzaG93aW5nIHggdG8geSBvZiB6IHJlc3VsdHNcIiBzdHlsZSB0aGluZ3MuXG4gIHZhciBmaXJzdF9yZXN1bHQgPSB0aGlzLnBlcl9wYWdlICogKGN1cnJlbnRfcGFnZSAtIDEpO1xuICBpZiAoZmlyc3RfcmVzdWx0IDwgMCkgeyBmaXJzdF9yZXN1bHQgPSAwOyB9XG5cbiAgLy8gTGFzdCByZXN1bHQgb24gdGhlIHBhZ2UuXG4gIHZhciBsYXN0X3Jlc3VsdCA9ICh0aGlzLnBlcl9wYWdlICogY3VycmVudF9wYWdlKSAtIDE7XG4gIGlmIChsYXN0X3Jlc3VsdCA8IDApIHsgbGFzdF9yZXN1bHQgPSAwOyB9XG4gIGlmIChsYXN0X3Jlc3VsdCA+IE1hdGgubWF4KHRvdGFsX3Jlc3VsdHMgLSAxLCAwKSkgeyBsYXN0X3Jlc3VsdCA9IE1hdGgubWF4KHRvdGFsX3Jlc3VsdHMgLSAxLCAwKTsgfVxuXG4gIC8vIEdJTU1FIFRIQVQgT0JKRUNUXG4gIHJldHVybiB7XG4gICAgdG90YWxfcGFnZXM6IHRvdGFsX3BhZ2VzLFxuICAgIHBhZ2VzOiBNYXRoLm1pbihsYXN0X3BhZ2UgLSBmaXJzdF9wYWdlICsgMSwgdG90YWxfcGFnZXMpLFxuICAgIGN1cnJlbnRfcGFnZTogY3VycmVudF9wYWdlLFxuICAgIGZpcnN0X3BhZ2U6IGZpcnN0X3BhZ2UsXG4gICAgbGFzdF9wYWdlOiBsYXN0X3BhZ2UsXG4gICAgcHJldmlvdXNfcGFnZTogY3VycmVudF9wYWdlIC0gMSxcbiAgICBuZXh0X3BhZ2U6IGN1cnJlbnRfcGFnZSArIDEsXG4gICAgaGFzX3ByZXZpb3VzX3BhZ2U6IGN1cnJlbnRfcGFnZSA+IDEsXG4gICAgaGFzX25leHRfcGFnZTogY3VycmVudF9wYWdlIDwgdG90YWxfcGFnZXMsXG4gICAgdG90YWxfcmVzdWx0czogdG90YWxfcmVzdWx0cyxcbiAgICByZXN1bHRzOiBNYXRoLm1pbihsYXN0X3Jlc3VsdCAtIGZpcnN0X3Jlc3VsdCArIDEsIHRvdGFsX3Jlc3VsdHMpLFxuICAgIGZpcnN0X3Jlc3VsdDogZmlyc3RfcmVzdWx0LFxuICAgIGxhc3RfcmVzdWx0OiBsYXN0X3Jlc3VsdCxcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/paginator/index.js\n");

/***/ })

};
;